<!-- header with a dropdown menu and login -->
<header class="siteheader">
  <div class="siteheaderContainer">

    <div id="site-logo"><a href="/" id="site-logo">Learn Local</a></div>
    <div class="dropdown">
      <a class="btn btn-secondary dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-toggle="dropdown"
        aria-haspopup="true" aria-expanded="false">
        Browse
      </a>

      <div class="dropdown-content">
        {{#each categories}}
         <a href="/learn/{{url}}"><h5 style="color: #007B89">{{text}}</h5></a>    
        {{/each}}
      </div>
    </div>

    <!-- Login  -->
    <button class="sign" onclick="document.getElementById('id01').style.display='block'"
      style="width:auto;">Login</button>

    <div id="id01" class="modal">

      <form class="modal-content animate" action="/action_page.php">
        <div class="imgcontainer">
          <span onclick="document.getElementById('id01').style.display='none'" class="close"
            title="Close Modal">&times;</span>
          <img src="../images/login.png" alt="Avatar" class="avatar">
        </div>

        <div class="login-container">
          <label for="uname"><b>Username</b></label>
          <input type="text" placeholder="Enter Username" name="uname" required>

          <label for="psw"><b>Password</b></label>
          <input type="password" placeholder="Enter Password" name="psw" required>

          <button class="login-button" type="submit">Login</button>
          <label>
            <input type="checkbox" checked="checked" name="remember"> Remember me
          </label>
        </div>

        <div class="login-container" style="background-color:#f1f1f1">
          <button type="button" onclick="document.getElementById('id01').style.display='none'"
            class="cancelbtn">Cancel</button>
          <span class="psw">Forgot <a href="#">password?</a></span>
        </div>
      </form>
    </div>
  </div>
</header>
<div class="container">

  <h1>Learn!</h1>

  <hr>

  <h2>Sign up for a <span class="selectedCategory">{{#each categories}}{{url}}{{/each}}</span> class happening in your neighborhood.
  </h2>

  <div class="AppDescriptionContainer">
    <p>If there&rsquo;s a class you&rsquo;d like to take, click the &ldquo;Sign up&rdquo; buttom to RSVP.
    </p>
  </div>

  <hr>

  <div class="row">
    <div class="col-12">
      <div class="card">
        <div class="card-body">
          <ul id="selectedCategoryResults" class="list-group">
          {{#each classes}}
            <li class='ClassInSelectedCategory'>
              <h1>Class: {{eventname}}</h1>
              <p><strong>Taught by:</strong> {{teacher}}</p>
              <p><strong>Location:</strong> {{eventlocation}}</p>
              <p><strong>Date:</strong> {{eventdate}}</p>
              <p><strong>Time:</strong> {{eventtime}}</p>
              <p><strong>Description:</strong> {{eventdescription}}
              </p>
              <div class="text-center"><button type="button" class="btn btn-lg btn-success signUpButton">
                  <h4>Sign up now!</h4>
                </button></div>
            </li>
            {{/each}}
          </ul>
        </div>
      </div>
    </div>
  </div>

  <hr>

  <div class="AppDescriptionContainer">
    <p>Search for different type of class.
    </p>
  </div>

  <div class="" align="center">
    
  </div>

  <hr>

  <div class="AppDescriptionContainer">
    <p>Host a class of your own!</p>
  </div>

  <div class="teachButtonContainer">
    <a href="/teach"><button type="button" class="btn btn-lg btn-success teachButton">
        <h4>Teach</h4>
      </button></a>
  </div>

  <!-- Modal -->
  <div id="signUpModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

      <!-- Modal content-->
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal">&times;</button>
          <h2 class="modal-title"><strong>Class name</strong></h2>
        </div>
        <div class="modal-body">
          <h2 id="match-name"></h2>
          <img id="match-img" style="max-width: 500px">
          <div class="signUpForm">
            <form>
              <div class="form-group">
                <label for="studentsName">Your name:</label>
                <textarea class="form-control" id="studentsName" rows="1"></textarea>
              </div>

              <div class="form-group">
                <label for="exampleFormControlInput1">Your email address:</label>
                <input type="email" class="form-control" id="exampleFormControlInput1" placeholder="name@example.com">
              </div>

              <div class="form-group">
                <label for="numberInParty">How many people are in your party?</label>
                <select multiple class="form-control" id="numberInParty">
                  <option>1</option>
                  <option>2</option>
                  <option>3</option>
                  <option>4</option>
                  <option>5</option>
                </select>
              </div>

            </form>
          </div>
        </div>
        <div class="modal-footer text-center">
          <button type="button" class="btn btn-lg btn-success signUpButton" data-dismiss="modal">
            <h4>Sign up!</h4>
          </button>
        </div>
      </div>

    </div>
  </div>
</div>

        <footer class="footer">
          <div class="container">
            <a href="https://github.com/wliang002/Project_2" target="_blank">GitHub Repo</a></p>
          </div>
        </footer>
<!-- Custom Script -->
{{!-- I tried to connect to the js but it doesn't read it so I had to add it in here directly --}}
<script src="/public/js/index.js" type="text/javascript"></script>
<script>
  // run everything when the window loads
  window.onload = function () {
    console.log('index page has loaded')
    // Get references to page elements
    // var $classCategoriesContainer = document.querySelector('.classCategoriesContainer')
    var $dropDownContent = document.querySelector('.dropdown-content')

    // our initial categories array
    var categories = []

    // our initial unique categories buttons and drop downs to add
    var uniqueCategoriesButtonsToAdd = []
    var uniqueDropDownsToAdd = []

    // getting categories when the page loads
    getCategories()

    // this function clears existing dummy buttons
    function clearDummyButtons() {
      // $classCategoriesContainer.innerHTML = ''
      $dropDownContent.innerHTML = ''
      console.log('all existing categories buttons have been erased')
    }

    // this function removes duplicate categoryButtons
    function getUnique(array) {
      var uniqueArray = []
      for (i = 0; i < array.length; i++) {
        if (uniqueArray.indexOf(array[i]) === -1) {
          uniqueArray.push(array[i])
        }
      }
      return uniqueArray
    }

    // this function displays the category buttons
    function displayButtons() {
      console.log('displayButtons function was called')
      clearDummyButtons()
      var categoryButtonsToAdd = []
      for (var i = 0; i < categories.length; i++) {
        categoryButtonsToAdd.push(createNewCategoryButton(categories[i]))
      }
      console.log('these are the categoryButtonsToAdd: ' + categoryButtonsToAdd)
      // capture only unique buttons
      uniqueCategoryButtonsToAdd = getUnique(categoryButtonsToAdd)
      console.log('the new unique buttons are: ' + uniqueCategoryButtonsToAdd)

      //$classCategoriesContainer.insertAdjacentHTML('afterbegin', uniqueCategoryButtonsToAdd)

    }

    // this function displays the drop downss
    function displayDropDowns() {
      console.log('displayDropDownsfunction was called')
      var DropDownsToAdd = []
      for (var i = 0; i < categories.length; i++) {
        DropDownsToAdd.push(createNewDropDowns(categories[i]))
      }
      console.log('these are the DropDownsToAdd: ' + DropDownsToAdd)
      // capture only unique buttons
      uniqueDropDownsToAdd = getUnique(DropDownsToAdd)
      console.log('the new unique dropdowns are: ' + uniqueDropDownsToAdd)
      $dropDownContent.insertAdjacentHTML('afterbegin', uniqueDropDownsToAdd.join(''))
    }

    // this function grabs the categories from the database and updates the view
    function getCategories() {
      fetch('/allData')
        .then(results => results.json())
        .then(function (data) {
          categories = data
          console.log('got all data', categories)
          displayButtons(categories)
          displayDropDowns(categories)
        })
    }

    // this function constructs a new category button
    function createNewCategoryButton(category) {
      console.log('createNewCategoryButton function was called')
      let newCategoryButton = `<a href="/learn/${category.category}"><button type="button" class="btn btn-lg btn-success categoryButton" data-id='${category.category}'><h4>${category.category}</h4></button></a>`
      return newCategoryButton
    }

    // this function constructs a dropdown
    function createNewDropDowns(category) {
      console.log('createNewDropDowns was called')
      let newDropDowns = `<a class="dropdown-item" href="/learn/${category.category}">${category.category}</a>`
      return newDropDowns
    }

  }
</script>